#summary How to serialize money instances using popular thrid party libraries.
#labels Phase-Design

= Third Party Serialization =
Serialization for third party libraries (those not included in the .NET framework) is supported via separate NuGet packages (one per library) that provide the source code needed to customize the serialization process.
   NOTE: the process and artifacts needed is different for each library. A different section will be provided for each library.

== Json.NET ==

[https://nmoneys.googlecode.com/svn/wiki/NMoneys_JsonNET_Nuget.png]

Once the package is installed, there are available three custom converters
 * `CanonicalConverter`
 * `DefaultConverter`
 * `NumericalConverter`
Each converter can be configured as per _Json.NET_ configuration instructions:
 * pass the converter as an optional parameter to either`.SerializeObject()`or `.DeserializeObject()` static methods of `JsonConvert`
 * Use the [http://james.newtonking.com/json/help/index.html?topic=html/P_Newtonsoft_Json_JsonSerializerSettings_Converters.htm .Converters] collection of a `JsonSerializerSettings` instance that will be passed to any of the aforementioned methods

If _Json-NET_ is used by a framework/library, refer to that library documentation on how to customize serialization/deserialization. Or you can drop a line in the discussion group in case someone can give a hand. 

== ServiceStack ==

[https://nmoneys.googlecode.com/svn/wiki/NMoneys_ServiceStack_Nuget.png]

== RavenDB ==

[https://nmoneys.googlecode.com/svn/wiki/NMoneys_RavenDB_Nuget.png]